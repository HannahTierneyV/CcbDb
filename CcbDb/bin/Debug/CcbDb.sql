/*
Deployment script for CcbDb

This code was generated by a tool.
Changes to this file may cause incorrect behavior and will be lost if
the code is regenerated.
*/

GO
SET ANSI_NULLS, ANSI_PADDING, ANSI_WARNINGS, ARITHABORT, CONCAT_NULL_YIELDS_NULL, QUOTED_IDENTIFIER ON;

SET NUMERIC_ROUNDABORT OFF;


GO
:setvar DatabaseName "CcbDb"
:setvar DefaultFilePrefix "CcbDb"
:setvar DefaultDataPath "C:\Users\vaughanh\AppData\Local\Microsoft\VisualStudio\SSDT\CcbDb"
:setvar DefaultLogPath "C:\Users\vaughanh\AppData\Local\Microsoft\VisualStudio\SSDT\CcbDb"

GO
:on error exit
GO
/*
Detect SQLCMD mode and disable script execution if SQLCMD mode is not supported.
To re-enable the script after enabling SQLCMD mode, execute the following:
SET NOEXEC OFF; 
*/
:setvar __IsSqlCmdEnabled "True"
GO
IF N'$(__IsSqlCmdEnabled)' NOT LIKE N'True'
    BEGIN
        PRINT N'SQLCMD mode must be enabled to successfully execute this script.';
        SET NOEXEC ON;
    END


GO
USE [$(DatabaseName)];


GO
/*
Post-Deployment Script Template							
--------------------------------------------------------------------------------------
 This file contains SQL statements that will be appended to the build script.		
 Use SQLCMD syntax to include a file in the post-deployment script.			
 Example:      :r .\myfile.sql								
 Use SQLCMD syntax to reference a variable in the post-deployment script.		
 Example:      :setvar TableName MyTable							
               SELECT * FROM [$(TableName)]					
--------------------------------------------------------------------------------------
*/
-- Name Type Key --
--	1	User
--	2	Entity

IF NOT EXISTS (SELECT * FROM [Entities] WHERE [Id] IN (1, 2, 3))
BEGIN
	SET IDENTITY_INSERT [Entities] ON;
	INSERT INTO [Entities] (
		[Id],
		[NameType],
		[FirstName],
		[LastName],
		[Address],
		[State])
	VALUES (1,
			1,
			'Bob',
			'The Builder',
			'123 Bob Lives Somewhere St',
			'IA'),
		   (2,
		    2,
			'Bob & Co.',
			'Bob & Co.',
			'124 Bob Lives Somewhere St',
			'IA'),
		   (3,
		    1,
			'The Builder',
			'That Is Not Bob',
			'900 Not Bob St Anymore',
			'WY');
	SET IDENTITY_INSERT [Entities] OFF;
END
-- License Type Key --
--	1	Generic CCB License
--	2	HEA
--	3	HEPSC

-- License Status Key --
--	0	Incomplete
--	1	Complete

IF NOT EXISTS (SELECT * FROM [CcbLicenses] WHERE [ApplicationId] IN (1, 2, 3)) AND
   NOT EXISTS (SELECT * FROM [CcbLicenses] WHERE [CcbNumber] IN (123456, 654321, 321654))
BEGIN
	SET IDENTITY_INSERT [CcbLicenses] ON;
	INSERT INTO [CcbLicenses] (
		[ApplicationId],
		[CcbNumber],
		[BusinessName],
		[LicenseType],
		[LicenseStatus],
		[Ssn])
	VALUES (1,
			123456,
			'Bob & Co.',
			1,
			1,
			1111),
		   (2,
			654321,
			'Constructioneers',
			2,
			0,
			2222),
		   (3,
			321654,
			'No Lead 2Day',
			3,
			1,
			3333);
	SET IDENTITY_INSERT [CcbLicenses] OFF;
END
IF NOT EXISTS (SELECT * FROM [EntityLicenses] WHERE [UserId] IN (1, 2, 3))
BEGIN
	SET IDENTITY_INSERT [EntityLicenses] ON;
	INSERT INTO [EntityLicenses] (
		[UserId],
		[CcbLicenseNumber])
	VALUES (1,
			123456),
		   (2,
		    654321),
		   (3,
		    321654);
	SET IDENTITY_INSERT [EntityLicenses] OFF;
END
GO

GO
PRINT N'Update complete.';


GO
